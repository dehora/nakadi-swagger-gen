package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;





@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-06-15T21:24:42.545+01:00")
public class EventMetadata   {
  
  private UUID eid = null;
  private String eventType = null;
  private Date occurredAt = null;
  private Date receivedAt = null;
  private List<UUID> parentEids = new ArrayList<UUID>();
  private String flowId = null;
  private String partition = null;

  
  /**
   * Identifier of this Event.\n\nClients MUST generate this value and it SHOULD be guaranteed to be unique from the\nperspective of the producer. Consumers MIGHT use this value to assert uniqueness of\nreception of the Event.\n
   **/
  public EventMetadata eid(UUID eid) {
    this.eid = eid;
    return this;
  }
  
  @ApiModelProperty(example = "105a76d8-db49-4144-ace7-e683e8f4ba46", required = true, value = "Identifier of this Event.\n\nClients MUST generate this value and it SHOULD be guaranteed to be unique from the\nperspective of the producer. Consumers MIGHT use this value to assert uniqueness of\nreception of the Event.\n")
  @JsonProperty("eid")
  public UUID getEid() {
    return eid;
  }
  public void setEid(UUID eid) {
    this.eid = eid;
  }

  
  /**
   * The EventType of this Event. This is enriched by Nakadi on reception of the Event\nbased on the endpoint where the Producer sent the Event to.\n\nIf provided MUST match the endpoint. Failure to do so will cause rejection of the\nEvent.\n
   **/
  public EventMetadata eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }
  
  @ApiModelProperty(example = "pennybags.payment-business-event", value = "The EventType of this Event. This is enriched by Nakadi on reception of the Event\nbased on the endpoint where the Producer sent the Event to.\n\nIf provided MUST match the endpoint. Failure to do so will cause rejection of the\nEvent.\n")
  @JsonProperty("event_type")
  public String getEventType() {
    return eventType;
  }
  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  
  /**
   * Timestamp of creation of the Event generated by the producer.\n
   **/
  public EventMetadata occurredAt(Date occurredAt) {
    this.occurredAt = occurredAt;
    return this;
  }
  
  @ApiModelProperty(example = "1996-12-19T16:39:57-08:00", required = true, value = "Timestamp of creation of the Event generated by the producer.\n")
  @JsonProperty("occurred_at")
  public Date getOccurredAt() {
    return occurredAt;
  }
  public void setOccurredAt(Date occurredAt) {
    this.occurredAt = occurredAt;
  }

  
  /**
   * Timestamp of the reception of the Event by Nakadi. This is enriched upon reception of\nthe Event.\nIf set by the producer Event will be rejected.\n
   **/
  public EventMetadata receivedAt(Date receivedAt) {
    this.receivedAt = receivedAt;
    return this;
  }
  
  @ApiModelProperty(example = "1996-12-19T16:39:57-08:00", value = "Timestamp of the reception of the Event by Nakadi. This is enriched upon reception of\nthe Event.\nIf set by the producer Event will be rejected.\n")
  @JsonProperty("received_at")
  public Date getReceivedAt() {
    return receivedAt;
  }
  public void setReceivedAt(Date receivedAt) {
    this.receivedAt = receivedAt;
  }

  
  /**
   **/
  public EventMetadata parentEids(List<UUID> parentEids) {
    this.parentEids = parentEids;
    return this;
  }
  
  @ApiModelProperty(example = "null", value = "")
  @JsonProperty("parent_eids")
  public List<UUID> getParentEids() {
    return parentEids;
  }
  public void setParentEids(List<UUID> parentEids) {
    this.parentEids = parentEids;
  }

  
  /**
   * The flow-id of the producer of this Event. As this is usually a HTTP header, this is\nenriched from the header into the metadata by Nakadi to avoid clients having to\nexplicitly copy this.\n
   **/
  public EventMetadata flowId(String flowId) {
    this.flowId = flowId;
    return this;
  }
  
  @ApiModelProperty(example = "JAh6xH4OQhCJ9PutIV_RYw", value = "The flow-id of the producer of this Event. As this is usually a HTTP header, this is\nenriched from the header into the metadata by Nakadi to avoid clients having to\nexplicitly copy this.\n")
  @JsonProperty("flow_id")
  public String getFlowId() {
    return flowId;
  }
  public void setFlowId(String flowId) {
    this.flowId = flowId;
  }

  
  /**
   * Indicates the partition assigned to this Event.\n\nRequired to be set by the client if partition strategy of the EventType is\n'user_defined'.\n
   **/
  public EventMetadata partition(String partition) {
    this.partition = partition;
    return this;
  }
  
  @ApiModelProperty(example = "0", value = "Indicates the partition assigned to this Event.\n\nRequired to be set by the client if partition strategy of the EventType is\n'user_defined'.\n")
  @JsonProperty("partition")
  public String getPartition() {
    return partition;
  }
  public void setPartition(String partition) {
    this.partition = partition;
  }

  

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventMetadata eventMetadata = (EventMetadata) o;
    return Objects.equals(this.eid, eventMetadata.eid) &&
        Objects.equals(this.eventType, eventMetadata.eventType) &&
        Objects.equals(this.occurredAt, eventMetadata.occurredAt) &&
        Objects.equals(this.receivedAt, eventMetadata.receivedAt) &&
        Objects.equals(this.parentEids, eventMetadata.parentEids) &&
        Objects.equals(this.flowId, eventMetadata.flowId) &&
        Objects.equals(this.partition, eventMetadata.partition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eid, eventType, occurredAt, receivedAt, parentEids, flowId, partition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventMetadata {\n");
    
    sb.append("    eid: ").append(toIndentedString(eid)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    occurredAt: ").append(toIndentedString(occurredAt)).append("\n");
    sb.append("    receivedAt: ").append(toIndentedString(receivedAt)).append("\n");
    sb.append("    parentEids: ").append(toIndentedString(parentEids)).append("\n");
    sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

